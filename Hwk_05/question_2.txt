James Lindamood
LINDA140

* I expand and here but don't for most of the rest as I think its intuitive and creates clutter.

1. andl (true::false::true::true::[])

Call By Value:

andl (true::false::true::true::[])
foldl and true (true::false::true::true::[])
foldl and (and true true) (false::true::true::[])
foldl and (if true then true else true)* (false::true::true::[]) 
foldl and true (false::true::true::[])
foldl and (and true false) (true::true::[])
foldl and false (true::true::[])
foldl and (and false true) (true::[])
foldl and false (true::[])
foldl and (and false true) false
foldl and false false
= false

Call By Name:

andl (true::false::true::true::[])
foldl and true (true::false::true::true::[])
foldl and (and true true) (false::true::true::[])
foldl and (and (and true true) false) (true::true::[])
foldl and (and (and (and true true) false) true) (true::[])
foldl and (and (and (and (and true true) false) true) true) []
and (and (and (and true true) false) true) true
and (and (and true false) true) true
and (and false true) true
and false true
= false

2. andr (true::false::true::true::[])

Call by Value:

andr (true::false::true::true::[])
foldr and (true::false::true::true::[]) true
and true (foldr and (false::true::true::[]) true)
and true (and false (foldr and (true::true::[]) true))
and true (and false (and true (foldr and (true::[]) true)))
and true (and false (and true (and true (foldr and [] true))))
and true (and false (and true (and true true)))
and true (and false (and true true))
and true (and false true)
and true false
= false

Call by Name:

andr (true::false::true::true::[])
foldr and (true::false::true::true::[]) true
and true (foldr and (false::true::true::[]) true)
foldr and (false::true::true::[]) true
and false (foldr and (true::true::[]) true)
and false (foldr and (true::true::[]) true)
if false then b2 else false
= false

Lazy evaluation is the same as Call by name in this example. There are no repeated calculations that can be calculated and saved as a reference, which is the difference between Lazy Evaluation and Call by Name (duplicate calculations are not performed twice, but once and then essentially referenced by later calls)

Call by name for andr is the best because it reaches the first element being false, and thus simply reaching the "Exit condition" in and faster.